# Classificazione dei minerali nelle rocce del grand canyon
# Classificazione degli oggetti

library(raster)
# install.packages("RStoolbox")
library(RStoolbox) 

# setwd("~/lab/") # Linux
setwd("C:/lab/") # Windows
# setwd("/Users/name/Desktop/lab/") # Mac 

# Importiamo i dati con la funzione brick perché mi servono tutte e 3 i livelli dell'immagine
so  <- brick( " Solar_Orbiter_s_first_views_of_the_Sun_pillars.jpg " )
Così
plotRGB( so , r = 1 , g = 2 , b = 3 , stretch = " lin " )
# Oppure: L'ordine dei colori delle bande è sempre R, G, B quindi posso scrivere direttamente il numero della banda che voglio partecipare alla componente e lo legge lo stesso
plotRGB( so , 1 , 2 , 3 , stretch = " lin " )

# CLassifichiamo i dati: (immagine, n° classi che deve trovare il computer)
soc  <- unsuperClass( so , nClasses = 3 )

cl  <- colorRampPalette(c( " yellow " , " black " , " red " ))( 100 )
plot( soc $ map , col = cl )

# set.seed può essere utilizzato per ripetere ogni volta lo stesso esperimento




# Riprendiamo la classificazione di immagini con il Grand Canyon

libreria ( raster )
libreria ( RStoolbox )

setwd( " C:/lab/ " )

# Importiamo l'immagine satellitare che classificheremo. E' un'immagine a 8 bit, con 3 bande
gc  <- brick( " dolansprings_oli_2013088_canyon_lrg.jpg " )
gc

# Plottiamo l'immagine e si vede con i colori che vede l'occhio umano perchè le bande sono in ordine R, G, B
plotRGB( gc , r = 1 , g = 2 , b = 3 , stretch = " lin " )
plotRGB( gc , r = 1 , g = 2 , b = 3 , stretch = " hist " )

# Classifica l'immagine
gcclass2  <- unsuperClass( gc , nClasses = 2 )
plot( gcclass2 $ mappa )

# Esercizio: classifica la mappa con 4 classi
gcclass4  <- unsuperClass( gc , nClasses = 4 )
plot( gcclass4 $ map , col = cl )
cl  <- colorRampPalette(c( " yellow " , " red " , " blue " , " black " ))( 100 )

# Confronta la mappa classificata con il set originale
par( mfrow = c( 2 , 1 ))
plot( gcclass4 $ map , col = cl )
plotRGB( gc , r = 1 , g = 2 , b = 3 , stretch = " hist " )
plotRGB( gc , r = 1 , g = 2 , b = 3 , stretch = " lin " )
