# SDM = Modellazione della distribuzione delle specie
# Codice R per la modellazione della distribuzione delle specie

# install.packages("sdm")
# install.packages("rgdal", dependencies=T)

libreria( raster ) # predittori
libreria ( sdm )
libreria( rgdal ) # specie

# Non abbiamo fatto il setwd perchè usiamo un file di sistema che viene dal pacchetto sdm
file  <- system.file( " external/species.shp " , package = " sdm " )

specie  <- shapefile ( file )

trama( specie , pch = 19 )

occ  <-  specie $ Occorrenza

plot( specie [ occ  ==  1 , ], col = " blu " , pch = 19 )
points( specie [ occ  ==  0 , ], col = " rosso " , pch = 19 )
# punti per evitare la sovrascrizione e per aggiungere le assenze alla trama delle presenze

# Predittori
percorso  <- system.file( " external " , package = " sdm " )

# Facciamo la lista dei predittori, in questo caso sono 4 (vegetation è NDVI)
lst  <- list.files( percorso = percorso , modello = ' asc ' , nomi completi = T )
# full.name è necessario nel caso in cui desideri mantenere il

preds  <- stack( lst )
cl  <- colorRampPalette(c( ' blue ' , ' orange ' , ' red ' , ' yellow ' )) ( 100 )
plot( preds , col = cl )

# Plottiamo i predittori singolarmente e la presenza
elev  <-  prede $ elevazione
prec  <-  predice $ precipitazioni
temp  <-  predice $ temperatura
vege  <-  prede $ vegetazione

plot( elev , col = cl )
punti( specie [ occ  ==  1 , ], pch = 19 )

plot( prec , col = cl )
punti( specie [ occ  ==  1 , ], pch = 19 )

plot( temp , col = cl )
punti( specie [ occ  ==  1 , ], pch = 19 )

plot( vege , col = cl )
punti( specie [ occ  ==  1 , ], pch = 19 )

# Facciamo il modello usando funzioni presenti nel pacchetto sdm
datasdm  <- sdmData( train = specie , predittori = preds ) # Funzione per richiamare i dati

m1  <- sdm( Evento  ~  altitudine  +  precipitazioni  +  temperatura  +  vegetazione , data = datasdm , metodi = " glm " )

# Facciamo la previsione con la funzione predict
p1  <- prevedi ( m1 , newdata = preds )

plot( p1 , col = cl )
points( specie [ occ  ==  1 , ], pch = 19 ) # Inseriamo anche le presenze per verificare

par( mfrow = c( 2 , 3 ))
plot( p1 , col = cl )
plot( elev , col = cl )
plot( prec , col = cl )
plot( temp , col = cl )
plot( vege , col = cl )

# Alternativa per il finale della trama per evitare di usare il multiframe
final  <- stack( preds , p1 )
plot( final , col = cl )

